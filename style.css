/* author: on Kantner */
* {
  border: 0;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/*#FCFCFC*/

:root {
  --dur: 0.3s;
  font-size: calc(40px + (80 - 40) * (100vw - 320px) / (2560 - 320));
}

body {
  background-color: #fcfcfc;
}

/* body,
input {
  color: #fcfcfc;
  font: 1em/1.5 sans-serif;
  background-color: #fcfcfc;
} */

input {
  border: 0.6px solid #fd5103;
  color: #fcfcfc;
}

form {
  background-color: #fcfcfc;
}
.toggle:before,
.toggle:after {
  /* background: hsl(0, 0%, 90%);  */
  background-color: #fd5103;
}

form,
.toggle {
  position: relative;
}

form {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.curtain,
.sr,
.toggle:before,
.toggle:after {
  position: absolute;
}

.curtain,
.toggle:before,
.toggle:after {
  transition: transform var(--dur);
}

.curtain,
.toggle:before,
.toggle:checked:after {
  transition-timing-function: ease-out;
}

.curtain,
.sr {
  top: 0;
  left: 0;
}

.curtain {
  /* background: hsl(0, 0%, 100%); */
  background: black;
  mix-blend-mode: difference;
  pointer-events: none;
  width: 100%;
  height: 100%;
  transform: scaleX(0);
  transform-origin: 0 50%;
}

.sr,
.toggle {
  overflow: hidden;
}

.sr {
  clip: rect(1px, 1px, 1px, 1px);
  color: transparent;
  width: 1px;
  height: 1px;
}

.toggle {
  background: currentColor;
  border-radius: 50px;
  cursor: pointer;
  width: 40px;
  height: 20px;
  -webkit-appearance: none;
  appearance: none;
  -webkit-tap-highlight-color: transparent;
}

.toggle:before,
.toggle:after {
  border-radius: 50%;
  content: "";
  display: block;
  position: absolute;
  width: 16px;
  height: 16px;
  left: 1px;
  top: 1px;
}

.toggle:before,
.toggle:checked:after {
  transition-delay: 0s;
}

.toggle:checked:before,
.toggle:after {
  transition-delay: calc(var(--dur) * 0.75);
  transition-timing-function: cubic-bezier(0.3, 1.6, 0.5, 0.7);
}

.toggle:before {
  transform: translateX(-1.5em);
}

.toggle:checked:before {
  transform: translateX(1.5em);
}

.toggle:checked:after {
  transform: translateX(3em);
}

.toggle:checked ~ .curtain {
  transform: scaleX(1);
}
.toggle:focus {
  outline: transparent;
}
